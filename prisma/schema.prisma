generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String
  password     String?
  payments     Payment[]
  loginType    LoginType
  createdAt    DateTime      @default(now())
  hireRequests HireRequest[]

  @@index([email])
}

model Payment {
  id              String        @id @default(cuid())
  amount          Float
  currency        String        @default("USD")
  createdAt       DateTime      @default(now())
  status          PaymentStatus @default(PENDING)
  user            User          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         String
  razorpayOrderId String        @unique

  @@index([user_id])
  @@index([user_id, createdAt])
}


model WebhookEvent {
  id          String    @id
  type        String
  receivedAt  DateTime  @default(now())
  processedAt DateTime?
}

model DowntimeWindow {
  id        Int      @id @default(autoincrement())
  gateway   String
  method    String
  startTime DateTime
  endTime   DateTime?
  duration  Int?     
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([gateway, method, endTime])
}

model DeveloperStatus {
  id        Int      @id @default(1)
  available Boolean  @default(true)
  updatedAt DateTime @updatedAt
}

model HireRequest {
  id            String   @id @default(cuid())
  title         String
  budget        Float
  projectDetail String
  timePeriod    String
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       String
  createdAt     DateTime @default(now())

  @@index([user_id])
  @@index([user_id, createdAt])
}

enum LoginType {
  GOOGLE
  PASSWORD
  GITHUB
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

